install.packages("ggplot2")
librry(ggplot2)
library(ggplot2)
qplot()
install.packages("caret")
library(caret)
library(caret)
library(e1071)
pmltrain <- read.csv("./Machine/data/pml-training.csv")
getwd()
setwd("./Coursera R")
getwd()
pmltrain <- read.csv("./Machine/data/pml-training.csv")
inTrain <- createDataPartition(y=pmltrain$classe,p=0.7, list=FALSE)
pml <- read.csv("./Machine/data/pml-training.csv")
pmlTrain <- pmltrain[inTrain,]
pmlTest <- pmltrain[-inTrain,]
pmlFinal <- read.csv("./Machine/data/pml-testing.csv")
pmlTrainSub <- pmlTrain[,colSums(is.na(pmlFinal)) != nrow(pmlFinal)]
names(pmlTrainSub)
is.na(pmlFinal)
names(pmlFinal)
names(pmlTrainSub)
pmlTrainSub <- pmlTrainSub[-c(1,3,4,60)]
names(pmlTrainSub)
pmlTrainSub$cvtd_timestamp<- as.POSIXct(as.character(pmlTrainSub$cvtd_timestamp), format="%d/%m/%Y %H:%M")
pmlTrainSub <- data.matrix(pmlTrainSub)
nrow(pmlTrainSub)
preProc <- preProcess(pmlTrainSub, method="pca")
preProc
trainPC <- predict(preProc, pmlTrainSub)
summary(trainPC)
pmlTrain <- data.matrix(pmlTrain)
modelFit <- train(pmlTrain$classe~.,method="glm", data=trainPC)
names(pmlTrain)
nrow(pmlTrain)
nrow(as.data.frame(pmlTrain))
names(as.data.frame(pmlTrain))
modelFit <- train(pmlTrain[,160]~.,method="glm", data=trainPC)
modelFit$finalModel
summary(modelFit)
pmlTestSub <- pmlTest[,colSums(is.na(pmlFinal)) != nrow(pmlFinal)]
pmlTestSub <- pmlTestSub[-c(1,3,4,60)]
pmlTestSub$cvtd_timestamp<- as.POSIXct(as.character(pmlTestSub$cvtd_timestamp), format="%d/%m/%Y %H:%M")
testPC <- predict(preProc, pmlTestSub)
names(pmlTestSub)
testPC <- predict(preProc, pmlTestSub)
class(pmlTestSub$cvtd_timestamp)
head(pmlTestSub$cvtd_timestamp)
head(unclass(pmlTestSub$cvtd_timestamp))
testPC <- predict(preProc, pmlTestSub)
testPC <- predict(preProc, data.matrix(pmlTestSub))
head(data.matrix(pmlTest)[,160])
head(data.matrix(pmlTest)[,160],30)
confusionMatrix(data.matrix(pmlTest)[,160], predict(modelFit, testPC)
)
confusionMatrix(data.matrix(pmlTest)[,160], predict(modelFit, testPC))
head(predict(modelFit, testPC))
head(predict(modelFit, data.mtrix(testPC)))
head(predict(modelFit, data.matrix(testPC)))
head(testPC)
head(modelFit)
head(predict(modelFit, as.data.frame(testPC)))
head(as.data.frame(testPC))
head(predict(modelFit, as.data.frame(testPC)))
testPC <- predict(preProc, pmlTestSub)
pmlTestSub <- data.matrix(pmlTestSub)
testPC <- predict(preProc, pmlTestSub)
predict(modelFit, testPC)
head(testPC)
class(testPC)
predict(modelFit, as.data.frame(testPC))
head(as.data.frame(testPC))
class(as.data.frame(testPC))
names(as.data.frame(testPC))
modelFit <- train(pmlTrain[,160]~.,method="glm", data=trainPC)
head(as.data.frame(pmlTrain$classe))
head(as.data.frame(pmlTrain)$classe)
modelFit <- train(as.data.frame(pmlTrain)$classe~.,method="glm", data=trainPC)
predict(modelFit, as.data.frame(testPC))
modelFit
library(kernlab)
install.package("kernlab")
install.packages("kernlab")
data(spam)
library(caret)
data(spam)
library(kernlan)
library(kernlab)
data(spam)
inTrain <- createDataPartition(y=spam$type,
p=0.75, list=FALSE)
training <- spam[inTrain,]
testing <- spam[-inTrain,]
M <- abs(cor(training[,-58]))
diag(M) <- 0
preProc <- preProcess(log10(spam[,-58]+1),method="pca",pcaComp=2)
trainPC <- predict(preProc,log10(training[,-58]+1))
head(trainPC)
modelFit <- train(training$type ~ .,method="glm",data=trainPC)
head(modelFit)
modelFit
testPC <- predict(preProc,log10(testing[,-58]+1))
confusionMatrix(testing$type,predict(modelFit,testPC))
ModelFit
modelFit
testPC
pmlTestSub$cvtd_timestamp<- as.POSIXct(as.character(pmlTestSub$cvtd_timestamp), format="%d/%m/%Y %H:%M")
pmlTrainSub <- pmlTrain[,colSums(is.na(pmlFinal)) != nrow(pmlFinal)]
testPC <- predict(preProc, pmlTestSub)
modelFit <- train(pmlTrain[,160]~.,method="glm", data=trainPC)
pml <- read.csv("./Machine/data/pml-training.csv")
inTrain <- createDataPartition(y=pmltrain$classe,p=0.7, list=FALSE)
pmlTrain <- pmltrain[inTrain,]
pmlTrain <- pmltrain[inTrain,]
pmlTest <- pmltrain[-inTrain,]
pmlFinal <- read.csv("./Machine/data/pml-testing.csv")
pmlTrainSub <- pmlTrain[,colSums(is.na(pmlFinal)) != nrow(pmlFinal)]
pmlTrainSub <- pmlTrainSub[-c(1,3,4,60)]
pmlTrainSub$cvtd_timestamp<- as.POSIXct(as.character(pmlTrainSub$cvtd_timestamp), format="%d/%m/%Y %H:%M")
pmlTrainSub <- data.matrix(pmlTrainSub)
preProc <- preProcess(pmlTrainSub, method="pca")
trainPC <- predict(preProc, pmlTrainSub)
pmlTrain <- data.matrix(pmlTrain)
modelFit <- train(pmlTrain[,160]~.,method="glm", data=trainPC)
pmlTestSub <- pmlTest[,colSums(is.na(pmlFinal)) != nrow(pmlFinal)]
modelFit
pmlTestSub <- pmlTest[,colSums(is.na(pmlFinal)) != nrow(pmlFinal)]
pmlTestSub <- pmlTestSub[-c(1,3,4,60)]
$cvtd_timestamp<- as.POSIXct(as.character(pmlTestSub$cvtd_timestamp), format="%d/%m/%Y %H:%M")
pmlTestSub$cvtd_timestamp<- as.POSIXct(as.character(pmlTestSub$cvtd_timestamp), format="%d/%m/%Y %H:%M")
testPC <- predict(preProc, pmlTestSub)
